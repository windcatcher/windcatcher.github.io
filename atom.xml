<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>windcatcher</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://windcatcher.github.io/"/>
  <updated>2018-03-04T15:23:01.625Z</updated>
  <id>https://windcatcher.github.io/</id>
  
  <author>
    <name>windcatcher</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用docker-compose 构建dotnetcore的console应用</title>
    <link href="https://windcatcher.github.io/2018/03/04/create-dotnetcore-app-by-docker-compose/"/>
    <id>https://windcatcher.github.io/2018/03/04/create-dotnetcore-app-by-docker-compose/</id>
    <published>2018-03-04T13:42:58.000Z</published>
    <updated>2018-03-04T15:23:01.625Z</updated>
    
    <content type="html"><![CDATA[<p>介绍使用docker-compose 构建dotnetcore的console应用<br>Docker Compose 是 Docker 官方编排（Orchestration）项目之一，负责快速在集群中部署分布式应用。<br>Dockerfile 是一个文本文件，其内包含了一条条的指令(Instruction)，每一条指令构建一层，因此每一条指令的内容，就是描述该层应当如何构建。<br>dotnetcore是微软跨平台的.net环境<br><a id="more"></a></p><h2 id="使用docker-compose-构建dotnetcore的console应用"><a href="#使用docker-compose-构建dotnetcore的console应用" class="headerlink" title="使用docker-compose 构建dotnetcore的console应用"></a>使用docker-compose 构建dotnetcore的console应用</h2><h4 id="1、创建【dockerconsole】目录"><a href="#1、创建【dockerconsole】目录" class="headerlink" title="1、创建【dockerconsole】目录"></a>1、创建【dockerconsole】目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mkdir dockerconsole</div><div class="line"><span class="built_in">cd</span> dockerconsole</div></pre></td></tr></table></figure><h4 id="2、使用vscode打开【dockerconsole】目录"><a href="#2、使用vscode打开【dockerconsole】目录" class="headerlink" title="2、使用vscode打开【dockerconsole】目录"></a>2、使用vscode打开【dockerconsole】目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">code .</div></pre></td></tr></table></figure><h4 id="3、【dockerconsole】目录下创建dotnetcore的console应用"><a href="#3、【dockerconsole】目录下创建dotnetcore的console应用" class="headerlink" title="3、【dockerconsole】目录下创建dotnetcore的console应用"></a>3、【dockerconsole】目录下创建dotnetcore的console应用</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dotnet new console</div></pre></td></tr></table></figure><h4 id="4、创建Dockerfile文件"><a href="#4、创建Dockerfile文件" class="headerlink" title="4、创建Dockerfile文件"></a>4、创建Dockerfile文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#使用microsoft/dotnet:sdk镜像作为编译环境</span></div><div class="line">FROM microsoft/dotnet:sdk AS build-env</div><div class="line"><span class="comment">#设置应用在docker中的工作路径</span></div><div class="line">WORKDIR /app</div><div class="line"><span class="comment">#拷贝所有csproj文件到/app下</span></div><div class="line">COPY *.csproj  ./</div><div class="line"><span class="comment">#执行还原命令</span></div><div class="line">RUN dotnet restore</div><div class="line"><span class="comment">#拷贝所有文件到/app下</span></div><div class="line">COPY . ./</div><div class="line"><span class="comment">#执行发布命令，编译的发布文件生成到/app/out目录下</span></div><div class="line">RUN dotnet publish -c Release -o out</div><div class="line"></div><div class="line"><span class="comment">#使用microsoft/dotnet:runtime镜像作为运行环境</span></div><div class="line">FROM microsoft/dotnet:runtime</div><div class="line"><span class="comment">#设置应用在docker中的工作路径</span></div><div class="line">WORKDIR /app</div><div class="line"><span class="comment">#从build-env生成/app/out目录下的所有文件拷贝到/app下</span></div><div class="line">COPY --from=build-env /app/out ./</div><div class="line"><span class="comment">#设置应用的启动命令</span></div><div class="line">ENTRYPOINT [ <span class="string">"dotnet"</span>,<span class="string">"dockerconsole.dll"</span> ]</div></pre></td></tr></table></figure><h4 id="5、创建docker-compose-yml文件"><a href="#5、创建docker-compose-yml文件" class="headerlink" title="5、创建docker-compose.yml文件"></a>5、创建docker-compose.yml文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">version: <span class="string">'3'</span></div><div class="line"></div><div class="line">services:</div><div class="line">    consoleapp:</div><div class="line">        <span class="comment">#构建名为consoleapp_img的镜像</span></div><div class="line">        image: consoleapp_img</div><div class="line">        build:</div><div class="line">            <span class="comment">#docker-compose.yml的当前根目录</span></div><div class="line">            context: .</div><div class="line">            <span class="comment">#根目录下的Dockerfile文件</span></div><div class="line">            dockerfile: Dockerfile</div><div class="line">        <span class="comment">#运行容器，名为consoleapp_c</span></div><div class="line">        container_name: consoleapp_c</div></pre></td></tr></table></figure><h4 id="6、【dockerconsole】目录下使用docker-compose-命令构建镜像并运行容器"><a href="#6、【dockerconsole】目录下使用docker-compose-命令构建镜像并运行容器" class="headerlink" title="6、【dockerconsole】目录下使用docker-compose 命令构建镜像并运行容器"></a>6、【dockerconsole】目录下使用docker-compose 命令构建镜像并运行容器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker-compose up</div></pre></td></tr></table></figure><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul><li><a href="https://hub.docker.com/r/microsoft/dotnet/" target="_blank" rel="external">Use multi-stage build with a .NET Core application</a></li><li><a href="https://yeasy.gitbooks.io/docker_practice/content/image/build.html" target="_blank" rel="external">使用 Dockerfile 定制镜像</a> </li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;介绍使用docker-compose 构建dotnetcore的console应用&lt;br&gt;Docker Compose 是 Docker 官方编排（Orchestration）项目之一，负责快速在集群中部署分布式应用。&lt;br&gt;Dockerfile 是一个文本文件，其内包含了一条条的指令(Instruction)，每一条指令构建一层，因此每一条指令的内容，就是描述该层应当如何构建。&lt;br&gt;dotnetcore是微软跨平台的.net环境&lt;br&gt;
    
    </summary>
    
      <category term="docker" scheme="https://windcatcher.github.io/categories/docker/"/>
    
    
      <category term="docker-compose" scheme="https://windcatcher.github.io/tags/docker-compose/"/>
    
      <category term="dotnetcore" scheme="https://windcatcher.github.io/tags/dotnetcore/"/>
    
      <category term="docker" scheme="https://windcatcher.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>国内访问google--使用host</title>
    <link href="https://windcatcher.github.io/2017/09/18/connect-google/"/>
    <id>https://windcatcher.github.io/2017/09/18/connect-google/</id>
    <published>2017-09-18T07:29:27.000Z</published>
    <updated>2017-09-18T08:30:31.902Z</updated>
    
    <content type="html"><![CDATA[<p>介绍如何使用host的访问google、Facebook等国外主流网站<br>由于上网需要，我们经常需要使用到google搜索，但避免不了被墙，所以网络上有各种梯子。比较使用，个人认为host使用起来还是比较方便和高效的<br>在选择搜索引擎方面，基于不浪费生命的原则，由于google搜索匹配度比百度的高，个人更倾向使用google<br><a id="more"></a></p><blockquote><p>host文件访问域名的原理<br>A.用户主机访问某一个域名,先从host文件中读取，如果host文件有该域名的ip地址，则直接返回该ip地址<br>B.如果没有该ip地址，则从dns服务器中获取ip，并将ip保存到host文件中   </p></blockquote><h4 id="需要的工具和环境"><a href="#需要的工具和环境" class="headerlink" title="需要的工具和环境"></a>需要的工具和环境</h4><h6 id="最新host文件"><a href="#最新host文件" class="headerlink" title="最新host文件"></a>最新host文件</h6><ul><li><a href="https://laod.cn/hosts/2017-google-hosts.html" target="_blank" rel="external">下载地址</a><blockquote><p>host 文件里包含了google等网站的ip地址<br>windows环境下host文件路径<br><em>C:\windows\system32\drivers\etc</em> </p></blockquote></li></ul><h6 id="SwitchHosts-软件"><a href="#SwitchHosts-软件" class="headerlink" title="SwitchHosts! 软件"></a>SwitchHosts! 软件</h6><ul><li><a href="https://github.com/oldj/SwitchHosts/releases" target="_blank" rel="external">下载地址</a></li></ul><h4 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h4><h6 id="1安装SwitchHosts-软件"><a href="#1安装SwitchHosts-软件" class="headerlink" title="1安装SwitchHosts! 软件"></a>1安装SwitchHosts! 软件</h6><h6 id="2使用管理员身份运行SwitchHosts-软件"><a href="#2使用管理员身份运行SwitchHosts-软件" class="headerlink" title="2使用管理员身份运行SwitchHosts! 软件"></a>2使用管理员身份运行SwitchHosts! 软件</h6><h6 id="3拷贝host内容并启用"><a href="#3拷贝host内容并启用" class="headerlink" title="3拷贝host内容并启用"></a>3拷贝host内容并启用</h6><p>将下载的host文件的全部内容拷贝SwitchHosts! 软件myhost选项页中，并启用<br><img src="http://owdourx5j.bkt.clouddn.com/switchhost.png" alt="效果"></p><h6 id="4测试使用google"><a href="#4测试使用google" class="headerlink" title="4测试使用google"></a>4测试使用google</h6><p><a href="https://www.google.com/ncr" target="_blank" rel="external">https://www.google.com/ncr</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;介绍如何使用host的访问google、Facebook等国外主流网站&lt;br&gt;由于上网需要，我们经常需要使用到google搜索，但避免不了被墙，所以网络上有各种梯子。比较使用，个人认为host使用起来还是比较方便和高效的&lt;br&gt;在选择搜索引擎方面，基于不浪费生命的原则，由于google搜索匹配度比百度的高，个人更倾向使用google&lt;br&gt;
    
    </summary>
    
      <category term="工具" scheme="https://windcatcher.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="host" scheme="https://windcatcher.github.io/tags/host/"/>
    
  </entry>
  
  <entry>
    <title>Centos 6.5 安装memcached</title>
    <link href="https://windcatcher.github.io/2017/09/18/install-memcached/"/>
    <id>https://windcatcher.github.io/2017/09/18/install-memcached/</id>
    <published>2017-09-18T07:01:49.000Z</published>
    <updated>2017-09-18T07:08:01.670Z</updated>
    
    <content type="html"><![CDATA[<p>介绍如何使用Centos6.5的linux操作系统下安装分布式缓存memcached<br><a id="more"></a></p><h2 id="Centos-6-5-安装memcached"><a href="#Centos-6-5-安装memcached" class="headerlink" title="Centos 6.5 安装memcached"></a><a href="http://www.cnblogs.com/windchatcher/p/7327356.html" target="_blank" rel="external">Centos 6.5 安装memcached</a></h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;介绍如何使用Centos6.5的linux操作系统下安装分布式缓存memcached&lt;br&gt;
    
    </summary>
    
      <category term="linux" scheme="https://windcatcher.github.io/categories/linux/"/>
    
      <category term="nosql" scheme="https://windcatcher.github.io/categories/linux/nosql/"/>
    
    
      <category term="memcached" scheme="https://windcatcher.github.io/tags/memcached/"/>
    
      <category term="linux" scheme="https://windcatcher.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Centos6.5 安装mysql5</title>
    <link href="https://windcatcher.github.io/2017/09/18/install-mysql5/"/>
    <id>https://windcatcher.github.io/2017/09/18/install-mysql5/</id>
    <published>2017-09-18T07:01:21.000Z</published>
    <updated>2017-09-18T07:09:16.675Z</updated>
    
    <content type="html"><![CDATA[<p>介绍如何使用Centos6.5的linux操作系统下安装mysql5<br><a id="more"></a></p><h2 id="Centos6-5-安装mysql5）"><a href="#Centos6-5-安装mysql5）" class="headerlink" title="Centos6.5 安装mysql5）"></a><a href="http://www.cnblogs.com/windchatcher/p/7337117.html" target="_blank" rel="external">Centos6.5 安装mysql5）</a></h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;介绍如何使用Centos6.5的linux操作系统下安装mysql5&lt;br&gt;
    
    </summary>
    
      <category term="linux" scheme="https://windcatcher.github.io/categories/linux/"/>
    
      <category term="database" scheme="https://windcatcher.github.io/categories/linux/database/"/>
    
    
      <category term="linux" scheme="https://windcatcher.github.io/tags/linux/"/>
    
      <category term="mysql" scheme="https://windcatcher.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>mybatis使用（配置、数据读取，对象化，分页）</title>
    <link href="https://windcatcher.github.io/2017/09/18/how-to-use-mybatis/"/>
    <id>https://windcatcher.github.io/2017/09/18/how-to-use-mybatis/</id>
    <published>2017-09-18T06:44:08.000Z</published>
    <updated>2017-09-18T06:54:20.010Z</updated>
    
    <content type="html"><![CDATA[<p>介绍如何使用mybatis<br>mybatis是一款轻量级的orm框架，支持sql语句，相比hibernate使用起来更加灵活方便<br><a id="more"></a></p><h2 id="mybatis使用（配置、数据读取，对象化，分页）"><a href="#mybatis使用（配置、数据读取，对象化，分页）" class="headerlink" title="mybatis使用（配置、数据读取，对象化，分页）"></a>mybatis使用（配置、数据读取，对象化，分页）</h2><h4 id="步骤1：mybatis工程的创建"><a href="#步骤1：mybatis工程的创建" class="headerlink" title="步骤1：mybatis工程的创建"></a><a href="http://www.cnblogs.com/windchatcher/p/7365030.html" target="_blank" rel="external">步骤1：mybatis工程的创建</a></h4><h4 id="步骤2：mybati配置"><a href="#步骤2：mybati配置" class="headerlink" title="步骤2：mybati配置"></a><a href="http://www.cnblogs.com/windchatcher/p/7365277.html" target="_blank" rel="external">步骤2：mybati配置</a></h4><h4 id="步骤3：mybatis的数据导入和数据读写操作"><a href="#步骤3：mybatis的数据导入和数据读写操作" class="headerlink" title="步骤3：mybatis的数据导入和数据读写操作"></a><a href="http://www.cnblogs.com/windchatcher/p/7365215.html" target="_blank" rel="external">步骤3：mybatis的数据导入和数据读写操作</a></h4><h4 id="步骤4：mybatis对sql进行对象化"><a href="#步骤4：mybatis对sql进行对象化" class="headerlink" title="步骤4：mybatis对sql进行对象化"></a><a href="http://www.cnblogs.com/windchatcher/p/7365222.html" target="_blank" rel="external">步骤4：mybatis对sql进行对象化</a></h4><h4 id="步骤5：在mybatis中使用query查询对象"><a href="#步骤5：在mybatis中使用query查询对象" class="headerlink" title="步骤5：在mybatis中使用query查询对象"></a><a href="http://www.cnblogs.com/windchatcher/p/7365232.html" target="_blank" rel="external">步骤5：在mybatis中使用query查询对象</a></h4><h4 id="步骤6：使用pagination对mybatis分页，并在jsp中展示源码"><a href="#步骤6：使用pagination对mybatis分页，并在jsp中展示源码" class="headerlink" title="步骤6：使用pagination对mybatis分页，并在jsp中展示源码"></a><a href="http://www.cnblogs.com/windchatcher/p/7365241.html" target="_blank" rel="external">步骤6：使用pagination对mybatis分页，并在jsp中展示源码</a></h4>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;介绍如何使用mybatis&lt;br&gt;mybatis是一款轻量级的orm框架，支持sql语句，相比hibernate使用起来更加灵活方便&lt;br&gt;
    
    </summary>
    
      <category term="java" scheme="https://windcatcher.github.io/categories/java/"/>
    
    
      <category term="mybatis" scheme="https://windcatcher.github.io/tags/mybatis/"/>
    
      <category term="orm" scheme="https://windcatcher.github.io/tags/orm/"/>
    
  </entry>
  
  <entry>
    <title>hexo使用</title>
    <link href="https://windcatcher.github.io/2017/09/16/how-to-use-hexo/"/>
    <id>https://windcatcher.github.io/2017/09/16/how-to-use-hexo/</id>
    <published>2017-09-16T10:34:28.000Z</published>
    <updated>2017-09-17T10:13:05.020Z</updated>
    
    <content type="html"><![CDATA[<p>介绍如何使用hexo编译/部署博客文章到GitHub上，做为个人的博客使用<br>hexo支持markdown语法，有丰富的主题和第三方服务，基本满足个人博客的使用<br><a id="more"></a></p><h2 id="hexo使用"><a href="#hexo使用" class="headerlink" title="hexo使用"></a>hexo使用</h2><h4 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h4><h5 id="发布新文章"><a href="#发布新文章" class="headerlink" title="发布新文章"></a>发布新文章</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo new post <span class="string">"article title"</span></div></pre></td></tr></table></figure><h5 id="编辑md文件"><a href="#编辑md文件" class="headerlink" title="编辑md文件"></a>编辑md文件</h5><p>使用markdown编辑器，编辑title，categories（类别），tags（标签）<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title:  hexo使用</div><div class="line">date: <span class="number">2017</span><span class="number">-09</span><span class="number">-16</span> <span class="number">18</span>:<span class="number">34</span>:<span class="number">28</span></div><div class="line">comments: <span class="literal">false</span></div><div class="line">categories:</div><div class="line">- 工具</div><div class="line">tags:</div><div class="line">- Hexo</div><div class="line">---</div></pre></td></tr></table></figure></p><p>添加文章摘要  </p><p><center><br><img src="http://owdourx5j.bkt.clouddn.com/hexo_zhaiyao.png" alt="文章摘要" title="文章摘要"><br></center></p><h5 id="清理编译"><a href="#清理编译" class="headerlink" title="清理编译"></a>清理编译</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo clean</div></pre></td></tr></table></figure><h5 id="生成编译"><a href="#生成编译" class="headerlink" title="生成编译"></a>生成编译</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo g</div></pre></td></tr></table></figure><h5 id="本地启动服务，查看md是样式否合理"><a href="#本地启动服务，查看md是样式否合理" class="headerlink" title="本地启动服务，查看md是样式否合理"></a>本地启动服务，查看md是样式否合理</h5><p>启动本地服务<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo s</div></pre></td></tr></table></figure></p><p>输入地址</p><blockquote><p><a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a></p><h5 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo d</div></pre></td></tr></table></figure></blockquote><p>也可以执行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo d -g <span class="comment">#在部署前先生成</span></div></pre></td></tr></table></figure></p><h5 id="远程gitgub查看"><a href="#远程gitgub查看" class="headerlink" title="远程gitgub查看"></a>远程gitgub查看</h5><blockquote><p>输入地址：<a href="https://windcatcher.github.io/">https://windcatcher.github.io/</a></p><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul><li><a href="http://blog.csdn.net/gdutxiaoxu/article/details/53576018" target="_blank" rel="external">手把手教你用Hexo+Github 搭建属于自己的博客</a></li><li><a href="https://www.ezlippi.com/blog/2016/02/jekyll-to-hexo.html" target="_blank" rel="external">Jekyll迁移到Hexo搭建个人博客</a></li><li><a href="http://theme-next.iissnan.com/getting-started.html#third-party-services" target="_blank" rel="external">next主题配置</a></li><li><a href="http://blog.csdn.net/time888/article/details/70249241" target="_blank" rel="external"> hexo 怎么删除文章？</a></li><li><a href="https://segmentfault.com/a/1190000002632530" target="_blank" rel="external">hexo常用命令笔记</a></li><li><a href="http://www.cnblogs.com/qyf404/p/5019631.html" target="_blank" rel="external">博客园markdown代码块支持的语言</a></li><li><a href="http://goozy.github.io/2017/03/22/%E4%BB%8E%E4%BB%8A%E5%A4%A9%E5%BC%80%E5%A7%8B%E4%BD%BF%E7%94%A8HyperComments%E5%95%A6%EF%BC%81/" target="_blank" rel="external">从今天开始使用HyperComments啦！</a></li><li><a href="http://blog.csdn.net/cl534854121/article/details/76121105" target="_blank" rel="external">百度分享集成+https</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;介绍如何使用hexo编译/部署博客文章到GitHub上，做为个人的博客使用&lt;br&gt;hexo支持markdown语法，有丰富的主题和第三方服务，基本满足个人博客的使用&lt;br&gt;
    
    </summary>
    
      <category term="工具" scheme="https://windcatcher.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Hexo" scheme="https://windcatcher.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>markdown 使用</title>
    <link href="https://windcatcher.github.io/2017/09/16/how-to-use-markdown/"/>
    <id>https://windcatcher.github.io/2017/09/16/how-to-use-markdown/</id>
    <published>2017-09-16T02:34:28.000Z</published>
    <updated>2017-09-17T10:13:02.737Z</updated>
    
    <content type="html"><![CDATA[<p>介绍如何使用markdown编写个人文章<br>markdown是一种非常流行的文本标记语言，语法简洁明了，易于排版，便于书写，第三方支持丰富。<br><a id="more"></a></p><h2 id="markdown-使用"><a href="#markdown-使用" class="headerlink" title="markdown 使用"></a>markdown 使用</h2><blockquote><p>  总结了markdown 使用的常见语法和快捷键  </p></blockquote><h4 id="常用语法"><a href="#常用语法" class="headerlink" title="常用语法"></a>常用语法</h4><h5 id="换行与缩进"><a href="#换行与缩进" class="headerlink" title="换行与缩进"></a>换行与缩进</h5><ul><li>换行：在行尾部处先按入<strong>两个</strong>以上的<strong>空格</strong>  </li><li>缩进：输入&amp;emsp;</li></ul><h5 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h5><ul><li>行首插入1 到 6 个 # ，对应到标题1到6阶</li></ul><h5 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h5><ul><li>无序列表：-或 * 即可变为无序列表</li><li>有序列表：直接在文字前加1. 2. 3. 符号要和文字之间加上一个字符的空格。</li></ul><h5 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h5><ul><li>需要在文本前加入<strong> > </strong></li></ul><h5 id="粗体和斜体和字体颜色"><a href="#粗体和斜体和字体颜色" class="headerlink" title="粗体和斜体和字体颜色"></a>粗体和斜体和字体颜色</h5><ul><li>粗体：<strong>两个 * </strong>包含一段文本</li><li>斜体：用<strong>一个 * </strong>包含一段文本</li><li>字体颜色：&lt;font color=red>内容&lt;/font><ul><li><em>例如</em>   <blockquote><font color="red">内容</font></blockquote></li></ul></li></ul><h5 id="图片与链接"><a href="#图片与链接" class="headerlink" title="图片与链接"></a>图片与链接</h5><ul><li>图片为：![](){ImgCap}{/ImgCap}</li><li>链接为：[]()</li></ul><h5 id="代码框"><a href="#代码框" class="headerlink" title="代码框"></a>代码框</h5><ul><li>```java```</li><li>示例：    <blockquote><p>```java<br>这是一段java代码<br>```</p></blockquote></li><li><em>效果：</em>  <figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//结算</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deposit</span><span class="params">(<span class="keyword">double</span> money)</span> </span>&#123;  </div><div class="line">        <span class="keyword">double</span> newBalance=<span class="keyword">this</span>.balance+money;  </div><div class="line">        <span class="keyword">try</span> &#123;  </div><div class="line">            Thread.sleep(<span class="number">10</span>);  </div><div class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;  </div><div class="line">            <span class="comment">// <span class="doctag">TODO:</span> handle exception  </span></div><div class="line">        &#125;  </div><div class="line">        <span class="keyword">this</span>.balance=newBalance;  </div><div class="line">    &#125;</div></pre></td></tr></table></figure></li></ul><h5 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h5><ul><li>分割线的语法只需要<strong>三个 * 号</strong></li></ul><h5 id="页内跳转"><a href="#页内跳转" class="headerlink" title="页内跳转"></a>页内跳转</h5><h6 id="自动生成目录"><a href="#自动生成目录" class="headerlink" title="自动生成目录:"></a>自动生成目录:</h6><ul><li>参考 快捷键<a href="#content">生成目录</a></li></ul><h6 id="手动生成目录"><a href="#手动生成目录" class="headerlink" title="手动生成目录"></a>手动生成目录</h6><ul><li>目录内容    <pre><code>\* \[1.语法示例\](#1)  &amp;emsp;\* \[1.1图片\](#1.1)    </code></pre></li><li>正文  <pre><code>&amp;lt;h5 id=&quot;1&quot;&gt;1.语法示例&amp;lt;/h2&gt;   &amp;emsp;&amp;lt;h6 id=&quot;2&quot;&gt;1.图片示例&amp;lt;/h2&gt;  </code></pre></li><li>例如  <blockquote><p>目录         </p><pre><code>[1.语法示例](#1)  &amp;emsp;[1.1图片](#1.1)  </code></pre><p> 正文     </p><pre><code>&lt;h5 id=&quot;1&quot;&gt;1.语法示例&lt;/h2&gt; &lt;h6 id=&quot;1.1&quot;&gt;1.1图片&lt;/h2&gt;</code></pre></blockquote></li></ul><h6 id="html标签实现"><a href="#html标签实现" class="headerlink" title="html标签实现"></a>html标签实现</h6><ul><li>定义一个锚(id)：&lt;span id=”jump”>跳转到的地方&lt;/span></li><li>使用markdown语法：[点击跳转](#jump)</li><li><em>例如：</em><blockquote><p><span id="jump">跳转到的地方</span><br>  <a href="#jump">点击跳转</a></p></blockquote></li></ul><hr><h4 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h4><ul><li>MarkdownPreview插件:<br><strong>快速预览</strong>：<strong>alt+m</strong>，<em>前提需要设置该快捷键，MarkdownPreview没有默认的快捷键</em><br><strong>生成网页</strong>：按<strong>CTRL + B</strong>生成网页HTML；<br><strong>生成目录</strong>：在文章最前面添加<strong>[TOC]</strong>自动 <span id="content">生成目录</span>  ；<br><strong>调出命令</strong>：<strong>Ctrl+Shift+P</strong>或是点击Preference-&gt;Package Control调出命令面板，输入<strong>mdp</strong></li><li><p>OmniMarkupPreviwer插件：<br><strong>Ctrl+Alt+O</strong>: Preview Markup in Browser<br>Ctrl+Alt+X: Export Markup as HTML.<br>Ctrl+Alt+C: Copy Markup as HTML  </p></li><li><p>MarkdownEditing插件<br>插入链接：输入 “mdi + tab”<br>插入图片：输入 “mdl + tab”   </p></li></ul><hr><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul><li><a href="http://www.cnblogs.com/JohnTsai/p/4027229.html#jump" target="_blank" rel="external">MarkDown技巧：两种方式实现页内跳转</a></li><li><a href="http://www.appinn.com/markdown/" target="_blank" rel="external">Markdown 语法说明 (简体中文版)</a></li><li><a href="http://www.appinn.com/markdown/basic.html" target="_blank" rel="external">Markdown: Basics （快速入门）</a></li><li><a href="http://www.jianshu.com/p/1e402922ee32/" target="_blank" rel="external">Markdown——入门指南</a></li><li><a href="http://www.jianshu.com/p/f8ff7dace5d4" target="_blank" rel="external">怎么结合印象笔记来使用Sublime Text？</a></li><li><a href="http://blog.csdn.net/qazxswed807/article/details/51235792#t3" target="_blank" rel="external">使用Sublime Text 3写Markdown</a></li><li><a href="http://www.jianshu.com/p/aa30cc25c91b" target="_blank" rel="external">Sublime插件：Markdown篇</a></li><li><a href="http://blog.csdn.net/github_35160620/article/details/52158604" target="_blank" rel="external">MarkdownPad 2 安装和破解</a></li><li><a href="http://blog.csdn.net/geekleee/article/details/73018194#inline" target="_blank" rel="external">markdown语法之如何插入图片</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;介绍如何使用markdown编写个人文章&lt;br&gt;markdown是一种非常流行的文本标记语言，语法简洁明了，易于排版，便于书写，第三方支持丰富。&lt;br&gt;
    
    </summary>
    
      <category term="工具" scheme="https://windcatcher.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Hexo" scheme="https://windcatcher.github.io/tags/Hexo/"/>
    
  </entry>
  
</feed>
